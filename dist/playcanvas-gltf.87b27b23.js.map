{"version":3,"sources":["js/lib/playcanvas-gltf.js"],"names":["Object","assign","window","nearestPow2","n","Math","pow","round","log","isPowerOf2","getPrimitiveType","primitive","primType","pc","PRIMITIVE_TRIANGLES","hasOwnProperty","mode","PRIMITIVE_POINTS","PRIMITIVE_LINES","PRIMITIVE_LINELOOP","PRIMITIVE_LINESTRIP","PRIMITIVE_TRISTRIP","PRIMITIVE_TRIFAN","getAccessorTypeSize","type","size","getFilter","filter","pcFilter","FILTER_LINEAR","FILTER_NEAREST","FILTER_NEAREST_MIPMAP_NEAREST","FILTER_LINEAR_MIPMAP_NEAREST","FILTER_NEAREST_MIPMAP_LINEAR","FILTER_LINEAR_MIPMAP_LINEAR","getWrap","wrap","pcWrap","ADDRESS_REPEAT","ADDRESS_CLAMP_TO_EDGE","ADDRESS_MIRRORED_REPEAT","isDataURI","uri","test","getAccessorData","gltf","accessor","buffers","bufferView","bufferViews","arrayBuffer","buffer","accessorByteOffset","byteOffset","bufferViewByteOffset","length","count","data","componentType","Int8Array","Uint8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","translateAnimation","resources","clip","AnimationClip","loop","name","channels","forEach","channel","sampler","samplers","times","accessors","input","values","output","time","value","inTangent","outTangent","target","path","curve","keyType","i","j","entity","nodes","node","numCurves","AnimationCurve","AnimationKeyableType","NUM","keyableType","addTarget","interpolation","AnimationCurveType","CUBIC","STEP","insertKey","addCurve","targetPath","VEC","QUAT","setTarget","CUBICSPLINE_GLTF","keyable","keyables","Vec3","Quat","AnimationKeyable","push","animKeys","duration","processAnimationExtras","extras","resampleImage","image","srcW","width","srcH","height","dstW","dstH","canvas","document","createElement","context","getContext","drawImage","toDataURL","translateImage","success","Image","onLoad","removeEventListener","imageIndex","images","indexOf","textures","texture","idx","source","t","addressU","addressV","minFilter","potImage","addEventListener","setSource","src","imagesLoaded","processUri","crossOrigin","basePath","imageBuffer","slice","byteLength","blob","Blob","mimeType","URL","createObjectURL","glossChunk","join","specularChunk","translateMaterial","material","StandardMaterial","occludeSpecular","diffuseTint","diffuseVertexColor","specularTint","specularVertexColor","extensions","useLighting","color","specData","KHR_materials_pbrSpecularGlossiness","diffuseFactor","diffuse","set","opacity","diffuseTexture","index","diffuseMap","diffuseMapChannel","opacityMap","opacityMapChannel","diffuseMapUv","texCoord","opacityMapUv","diffuseTransformData","KHR_texture_transform","diffuseMapTiling","Vec2","scale","opacityMapTiling","diffuseMapOffset","offset","opacityMapOffset","useMetalness","specularFactor","specular","shininess","glossinessFactor","specularGlossinessTexture","specularMap","specularMapChannel","glossMap","glossMapChannel","glossMapUv","metalnessMapUv","specGlossTransformData","glossMapTiling","metalnessMapTiling","glossMapOffset","metalnessMapOffset","chunks","specularPS","pbrData","pbrMetallicRoughness","baseColorFactor","baseColorTexture","baseColorTransformData","metalness","metallicFactor","roughnessFactor","metallicRoughnessTexture","metalnessMap","metalnessMapChannel","metallicTransformData","glossPS","normalTexture","normalMap","normalMapUv","normalTransformData","normalMapTiling","normalMapOffset","bumpiness","occlusionTexture","aoMap","aoMapChannel","aoMapUv","occlusionTransformData","aoMapTiling","aoMapOffset","emissiveFactor","emissive","emissiveTint","emissiveTexture","emissiveMap","emissiveMapUv","emissiveTransformData","emissiveMapTiling","emissiveMapOffset","alphaMode","blendType","BLEND_NONE","alphaTest","alphaCutoff","BLEND_NORMAL","twoSidedLighting","doubleSided","cull","CULLFACE_NONE","CULLFACE_BACK","processMaterialExtras","update","translateMesh","meshes","primitives","attributes","positions","normals","tangents","texCoord0","texCoord1","colors","joints","weights","indices","extDraco","KHR_draco_mesh_compression","uint8Buffer","decoderModule","DecoderBuffer","Init","decoder","Decoder","geometryType","GetEncodedGeometryType","outputGeometry","status","INVALID_GEOMETRY_TYPE","console","error","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","ok","ptr","errorMsg","error_msg","numPoints","num_points","numFaces","num_faces","extractAttribute","uniqueId","attribute","GetAttributeByUniqueId","attributeData","DracoFloat32Array","GetAttributeFloatForAllPoints","numValues","num_components","GetValue","destroy","dracoAttribs","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","JOINTS_0","WEIGHTS_0","face","DracoInt32Array","GetFaceFromMesh","numVertices","calculateIndices","dummyIndices","calculateNormals","vertexDesc","semantic","SEMANTIC_POSITION","components","TYPE_FLOAT32","SEMANTIC_NORMAL","SEMANTIC_TANGENT","SEMANTIC_TEXCOORD0","SEMANTIC_TEXCOORD1","SEMANTIC_COLOR","TYPE_UINT8","normalize","SEMANTIC_BLENDINDICES","SEMANTIC_BLENDWEIGHT","vertexFormat","VertexFormat","device","vertexBuffer","VertexBuffer","BUFFER_STATIC","vertexData","lock","vertexDataF32","vertexDataU8","getAttribute","elements","dstIndex","srcIndex","attr","dstOffset","dstStride","stride","r","g","b","a","math","clamp","unlock","mesh","base","indexed","indexFormat","INDEXFORMAT_UINT8","INDEXFORMAT_UINT16","INDEXFORMAT_UINT32","numIndices","indexBuffer","IndexBuffer","materialIndex","min","max","aabb","BoundingBox","targets","options","deltaPositions","deltaNormals","deltaTangents","MorphTarget","morph","Morph","tempMat","Mat4","tempVec","translateNode","GraphNode","nodeCounter","matrix","getTranslation","setLocalPosition","getEulerAngles","setLocalEulerAngles","getScale","setLocalScale","rotation","setLocalRotation","translation","s","translateSkin","bindMatrix","numJoints","ibp","inverseBindMatrices","ibmData","ibmValues","boneNames","skeleton","skin","Skin","bones","translateTexture","Texture","flipY","magFilter","wrapS","wrapT","loadBuffers","numLoaded","byteString","atob","split","ArrayBuffer","uint8Array","charCodeAt","result","xhr","XMLHttpRequest","open","responseType","onload","e","response","send","parse","property","translator","map","item","buildHierarchy","children","childIdx","child","parent","removeChild","addChild","getRoots","rootNodes","sceneIndex","scene","scenes","createModel","meshInstances","skinInstances","morphInstances","nodeIndex","meshGroup","undefined","defaultMaterial","materials","meshInstance","MeshInstance","morphInstance","MorphInstance","updateBounds","weight","weightIndex","setWeight","skins","skinInstance","SkinInstance","model","Model","roots","graph","root","loadGltf","done","processGlobalExtras","extensionsUsed","animations","decodeBinaryUtf8","array","TextDecoder","decode","str","len","String","fromCharCode","decodeURIComponent","escape","loadGlb","glb","dataView","DataView","magic","getUint32","toString","version","chunkLength","chunkType","jsonData","JSON"],"mappings":"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","file":"playcanvas-gltf.87b27b23.js","sourceRoot":"..\\www","sourcesContent":["Object.assign(window, function () {\r\n\r\n    // Math utility functions\r\n    function nearestPow2(n) {\r\n        return Math.pow(2, Math.round(Math.log(n) / Math.log(2)));\r\n    }\r\n\r\n    function isPowerOf2(n) {\r\n        return n && (n & (n - 1)) === 0;\r\n    }\r\n\r\n    function getPrimitiveType(primitive) {\r\n        var primType = pc.PRIMITIVE_TRIANGLES;\r\n\r\n        if (primitive.hasOwnProperty('mode')) {\r\n            switch (primitive.mode) {\r\n                case 0: primType = pc.PRIMITIVE_POINTS; break;\r\n                case 1: primType = pc.PRIMITIVE_LINES; break;\r\n                case 2: primType = pc.PRIMITIVE_LINELOOP; break;\r\n                case 3: primType = pc.PRIMITIVE_LINESTRIP; break;\r\n                case 4: primType = pc.PRIMITIVE_TRIANGLES; break;\r\n                case 5: primType = pc.PRIMITIVE_TRISTRIP; break;\r\n                case 6: primType = pc.PRIMITIVE_TRIFAN; break;\r\n            }\r\n        }\r\n\r\n        return primType;\r\n    }\r\n\r\n    function getAccessorTypeSize(type) {\r\n        var size = 3;\r\n\r\n        switch (type) {\r\n            case 'SCALAR': size = 1; break;\r\n            case 'VEC2': size = 2; break;\r\n            case 'VEC3': size = 3; break;\r\n            case 'VEC4': size = 4; break;\r\n            case 'MAT2': size = 4; break;\r\n            case 'MAT3': size = 9; break;\r\n            case 'MAT4': size = 16; break;\r\n        }\r\n\r\n        return size;\r\n    }\r\n\r\n    function getFilter(filter) {\r\n        var pcFilter = pc.FILTER_LINEAR;\r\n\r\n        switch (filter) {\r\n            case 9728: pcFilter = pc.FILTER_NEAREST; break;\r\n            case 9729: pcFilter = pc.FILTER_LINEAR; break;\r\n            case 9984: pcFilter = pc.FILTER_NEAREST_MIPMAP_NEAREST; break;\r\n            case 9985: pcFilter = pc.FILTER_LINEAR_MIPMAP_NEAREST; break;\r\n            case 9986: pcFilter = pc.FILTER_NEAREST_MIPMAP_LINEAR; break;\r\n            case 9987: pcFilter = pc.FILTER_LINEAR_MIPMAP_LINEAR; break;\r\n        }\r\n\r\n        return pcFilter;\r\n    }\r\n\r\n    function getWrap(wrap) {\r\n        var pcWrap = pc.ADDRESS_REPEAT;\r\n\r\n        switch (wrap) {\r\n            case 33071: pcWrap = pc.ADDRESS_CLAMP_TO_EDGE; break;\r\n            case 33648: pcWrap = pc.ADDRESS_MIRRORED_REPEAT; break;\r\n            case 10497: pcWrap = pc.ADDRESS_REPEAT; break;\r\n        }\r\n\r\n        return pcWrap;\r\n    }\r\n\r\n    function isDataURI(uri) {\r\n        return /^data:.*,.*$/i.test(uri);\r\n    }\r\n\r\n    function getAccessorData(gltf, accessor, buffers) {\r\n        var bufferView = gltf.bufferViews[accessor.bufferView];\r\n        var arrayBuffer = buffers[bufferView.buffer];\r\n        var accessorByteOffset = accessor.hasOwnProperty('byteOffset') ? accessor.byteOffset : 0;\r\n        var bufferViewByteOffset = bufferView.hasOwnProperty('byteOffset') ? bufferView.byteOffset : 0;\r\n        var byteOffset = accessorByteOffset + bufferViewByteOffset;\r\n        var length = accessor.count * getAccessorTypeSize(accessor.type);\r\n\r\n        var data = null;\r\n\r\n        switch (accessor.componentType) {\r\n            case 5120: data = new Int8Array(arrayBuffer, byteOffset, length); break;\r\n            case 5121: data = new Uint8Array(arrayBuffer, byteOffset, length); break;\r\n            case 5122: data = new Int16Array(arrayBuffer, byteOffset, length); break;\r\n            case 5123: data = new Uint16Array(arrayBuffer, byteOffset, length); break;\r\n            case 5125: data = new Uint32Array(arrayBuffer, byteOffset, length); break;\r\n            case 5126: data = new Float32Array(arrayBuffer, byteOffset, length); break;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animation\r\n    function translateAnimation(data, resources) {\r\n        var clip = new AnimationClip();\r\n        clip.loop = true;\r\n        if (data.hasOwnProperty('name'))\r\n            clip.name = data.name;\r\n\r\n        var gltf = resources.gltf;\r\n\r\n        data.channels.forEach(function (channel) {\r\n            var sampler = data.samplers[channel.sampler];\r\n            var times = getAccessorData(gltf, gltf.accessors[sampler.input], resources.buffers);\r\n            var values = getAccessorData(gltf, gltf.accessors[sampler.output], resources.buffers);\r\n            var time, value, inTangent, outTangent;\r\n\r\n            var target = channel.target;\r\n            var path = target.path;\r\n            var curve, keyType;\r\n            var i, j;\r\n\r\n            // Animation for the same root, organized in one AnimationComponent\r\n            var entity = resources.nodes[target.node];\r\n\r\n            if (path === 'weights') {\r\n                var numCurves = values.length / times.length;\r\n                for (i = 0; i < numCurves; i++) {\r\n                    curve = new AnimationCurve();\r\n                    keyType = AnimationKeyableType.NUM;\r\n                    curve.keyableType = keyType;\r\n                    curve.addTarget(\"model\", path, i);\r\n                    if (sampler.interpolation === \"CUBIC\")\r\n                        curve.type = AnimationCurveType.CUBIC;\r\n                    else if (sampler.interpolation === \"STEP\")\r\n                        curve.type = AnimationCurveType.STEP;\r\n\r\n                    for (j = 0; j < times.length; j++) {\r\n                        time = times[j];\r\n                        value = values[numCurves * j + i];\r\n                        curve.insertKey(keyType, time, value);\r\n                    }\r\n                    clip.addCurve(curve);\r\n                }\r\n            } else {\r\n                // translation, rotation or scale\r\n                keyType = AnimationKeyableType.NUM;\r\n                var targetPath = path;\r\n                switch (path) {\r\n                    case \"translation\":\r\n                        keyType = AnimationKeyableType.VEC;\r\n                        targetPath = \"localPosition\";\r\n                        break;\r\n                    case \"scale\":\r\n                        keyType = AnimationKeyableType.VEC;\r\n                        targetPath = \"localScale\";\r\n                        break;\r\n                    case \"rotation\":\r\n                        keyType = AnimationKeyableType.QUAT;\r\n                        targetPath = \"localRotation\";\r\n                        break;\r\n                }\r\n                curve = new AnimationCurve();\r\n                curve.keyableType = keyType;\r\n                curve.setTarget(entity, targetPath);\r\n                if (sampler.interpolation === \"CUBIC\")\r\n                    curve.type = AnimationCurveType.CUBIC;\r\n                else if (sampler.interpolation === \"STEP\")\r\n                    curve.type = AnimationCurveType.STEP;\r\n                else if (sampler.interpolation === \"CUBICSPLINE\")\r\n                    curve.type = AnimationCurveType.CUBICSPLINE_GLTF;\r\n\r\n                // glTF animation keys can be assumed to be serialized in time\r\n                // order so no need to use AnimationCurve#insertKey (which does\r\n                // extra work to insert a key at the correct index).\r\n                var keyable, keyables = [];\r\n\r\n                if (sampler.interpolation === \"CUBICSPLINE\") {\r\n                    for (i = 0; i < times.length; i++) {\r\n                        time = times[i];\r\n                        if ((path === 'translation') || (path === 'scale')) {\r\n                            inTangent = new pc.Vec3(values[9 * i + 0], values[9 * i + 1], values[9 * i + 2]);\r\n                            value = new pc.Vec3(values[9 * i + 3], values[9 * i + 4], values[9 * i + 5]);\r\n                            outTangent = new pc.Vec3(values[9 * i + 6], values[9 * i + 7], values[9 * i + 8]);\r\n                        } else if (path === 'rotation') {\r\n                            inTangent = new pc.Quat(values[12 * i + 0], values[12 * i + 1], values[12 * i + 2], values[12 * i + 3]);\r\n                            value = new pc.Quat(values[12 * i + 4], values[12 * i + 5], values[12 * i + 6], values[12 * i + 7]);\r\n                            outTangent = new pc.Quat(values[12 * i + 8], values[12 * i + 9], values[12 * i + 10], values[12 * i + 11]);\r\n                        } else {\r\n                            inTangent = values[3 * i];\r\n                            value = values[3 * i + 1];\r\n                            outTangent = values[3 * i + 2];\r\n                        }\r\n\r\n                        keyable = new AnimationKeyable(keyType, time, value);\r\n                        keyable.inTangent = inTangent;\r\n                        keyable.outTangent = outTangent;\r\n                        keyables.push(keyable);\r\n                    }\r\n                } else {\r\n                    for (i = 0; i < times.length; i++) {\r\n                        time = times[i];\r\n                        if ((path === 'translation') || (path === 'scale'))\r\n                            value = new pc.Vec3(values[3 * i + 0], values[3 * i + 1], values[3 * i + 2]);\r\n                        else if (path === 'rotation')\r\n                            value = new pc.Quat(values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]);\r\n                        else // AnimationKeyableType.NUM\r\n                            value = values[i];\r\n\r\n                        keyable = new AnimationKeyable(keyType, time, value);\r\n                        keyables.push(keyable);\r\n                    }\r\n                }\r\n\r\n                curve.animKeys = keyables;\r\n                curve.duration = time;\r\n                clip.addCurve(curve);\r\n            }\r\n        });\r\n\r\n        if (data.hasOwnProperty('extras') && resources.processAnimationExtras) {\r\n            resources.processAnimationExtras(clip, data.extras);\r\n        }\r\n\r\n        return clip;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#image\r\n    function resampleImage(image) {\r\n        var srcW = image.width;\r\n        var srcH = image.height;\r\n\r\n        var dstW = nearestPow2(srcW);\r\n        var dstH = nearestPow2(srcH);\r\n\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = dstW;\r\n        canvas.height = dstH;\r\n\r\n        var context = canvas.getContext('2d');\r\n        context.drawImage(image, 0, 0, srcW, srcH, 0, 0, dstW, dstH);\r\n\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    function translateImage(data, resources, success) {\r\n        var image = new Image();\r\n\r\n        var onLoad = function () {\r\n            image.removeEventListener('load', onLoad, false);\r\n\r\n            var gltf = resources.gltf;\r\n\r\n            var imageIndex = resources.images.indexOf(image);\r\n            gltf.textures.forEach(function (texture, idx) {\r\n                if (texture.hasOwnProperty('source')) {\r\n                    if (texture.source === imageIndex) {\r\n                        var t = resources.textures[idx];\r\n                        if ((!isPowerOf2(image.width) || !isPowerOf2(image.width)) &&\r\n                            ((t.addressU === pc.ADDRESS_REPEAT) || (t.addressU === pc.ADDRESS_MIRRORED_REPEAT) ||\r\n                             (t.addressV === pc.ADDRESS_REPEAT) || (t.addressV === pc.ADDRESS_MIRRORED_REPEAT) ||\r\n                             (t.minFilter === pc.FILTER_LINEAR_MIPMAP_LINEAR) || (t.minFilter === pc.FILTER_NEAREST_MIPMAP_LINEAR) ||\r\n                             (t.minFilter === pc.FILTER_LINEAR_MIPMAP_NEAREST) || (t.minFilter === pc.FILTER_NEAREST_MIPMAP_NEAREST))) {\r\n                            var potImage = new Image();\r\n                            potImage.addEventListener('load', function () {\r\n                                t.setSource(potImage);\r\n                            });\r\n                            potImage.src = resampleImage(image);\r\n                        } else {\r\n                            t.setSource(image);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            resources.imagesLoaded++;\r\n            if (resources.imagesLoaded === gltf.images.length) {\r\n                success();\r\n            }\r\n        };\r\n\r\n        image.addEventListener('load', onLoad, false);\r\n\r\n        if (data.hasOwnProperty('uri')) {\r\n            if (isDataURI(data.uri)) {\r\n                image.src = data.uri;\r\n            } else if (resources.processUri) {\r\n                resources.processUri(data.uri, function (uri) {\r\n                    image.crossOrigin = \"anonymous\";\r\n                    image.src = uri;\r\n                });\r\n            } else {\r\n                image.crossOrigin = \"anonymous\";\r\n                image.src = resources.basePath + data.uri;\r\n            }\r\n        }\r\n\r\n        if (data.hasOwnProperty('bufferView')) {\r\n            var gltf = resources.gltf;\r\n            var buffers = resources.buffers;\r\n            var bufferView = gltf.bufferViews[data.bufferView];\r\n            var arrayBuffer = buffers[bufferView.buffer];\r\n            var byteOffset = bufferView.hasOwnProperty('byteOffset') ? bufferView.byteOffset : 0;\r\n            var imageBuffer = arrayBuffer.slice(byteOffset, byteOffset + bufferView.byteLength);\r\n            var blob = new Blob([imageBuffer], { type: data.mimeType });\r\n            image.src = URL.createObjectURL(blob);\r\n        }\r\n\r\n        return image;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#material\r\n\r\n    var glossChunk = [\r\n        \"#ifdef MAPFLOAT\",\r\n        \"uniform float material_shininess;\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"#ifdef MAPTEXTURE\",\r\n        \"uniform sampler2D texture_glossMap;\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"void getGlossiness() {\",\r\n        \"    dGlossiness = 1.0;\",\r\n        \"\",\r\n        \"#ifdef MAPFLOAT\",\r\n        \"    dGlossiness *= material_shininess;\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"#ifdef MAPTEXTURE\",\r\n        \"    dGlossiness *= texture2D(texture_glossMap, $UV).$CH;\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"#ifdef MAPVERTEX\",\r\n        \"    dGlossiness *= saturate(vVertexColor.$VC);\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"    dGlossiness = 1.0 - dGlossiness;\",\r\n        \"\",\r\n        \"    dGlossiness += 0.0000001;\",\r\n        \"}\"\r\n    ].join('\\n');\r\n\r\n    var specularChunk = [\r\n        \"#ifdef MAPCOLOR\",\r\n        \"uniform vec3 material_specular;\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"#ifdef MAPTEXTURE\",\r\n        \"uniform sampler2D texture_specularMap;\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"void getSpecularity() {\",\r\n        \"    dSpecularity = vec3(1.0);\",\r\n        \"\",\r\n        \"    #ifdef MAPCOLOR\",\r\n        \"        dSpecularity *= material_specular;\",\r\n        \"    #endif\",\r\n        \"\",\r\n        \"    #ifdef MAPTEXTURE\",\r\n        \"        vec3 srgb = texture2D(texture_specularMap, $UV).$CH;\",\r\n        \"        dSpecularity *= vec3(pow(srgb.r, 2.2), pow(srgb.g, 2.2), pow(srgb.b, 2.2));\",\r\n        \"    #endif\",\r\n        \"\",\r\n        \"    #ifdef MAPVERTEX\",\r\n        \"        dSpecularity *= saturate(vVertexColor.$VC);\",\r\n        \"    #endif\",\r\n        \"}\"\r\n    ].join('\\n');\r\n\r\n    function translateMaterial(data, resources) {\r\n        var material = new pc.StandardMaterial();\r\n\r\n        // glTF dooesn't define how to occlude specular\r\n        material.occludeSpecular = true;\r\n\r\n        material.diffuseTint = true;\r\n        material.diffuseVertexColor = true;\r\n\r\n        material.specularTint = true;\r\n        material.specularVertexColor = true;\r\n\r\n        if (data.hasOwnProperty('name')) {\r\n            material.name = data.name;\r\n        }\r\n\r\n        if (data.hasOwnProperty('extensions') && data.extensions.hasOwnProperty('KHR_materials_unlit')) {\r\n            material.useLighting = false;\r\n        }\r\n\r\n        var color, texture;\r\n        if (data.hasOwnProperty('extensions') && data.extensions.hasOwnProperty('KHR_materials_pbrSpecularGlossiness')) {\r\n            var specData = data.extensions.KHR_materials_pbrSpecularGlossiness;\r\n\r\n            if (specData.hasOwnProperty('diffuseFactor')) {\r\n                color = specData.diffuseFactor;\r\n                // Convert from linear space to sRGB space\r\n                material.diffuse.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\r\n                material.opacity = (color[3] != null) ? color[3] : 1;\r\n            } else {\r\n                material.diffuse.set(1, 1, 1);\r\n                material.opacity = 1;\r\n            }\r\n            if (specData.hasOwnProperty('diffuseTexture')) {\r\n                var diffuseTexture = specData.diffuseTexture;\r\n                texture = resources.textures[diffuseTexture.index];\r\n\r\n                material.diffuseMap = texture;\r\n                material.diffuseMapChannel = 'rgb';\r\n                material.opacityMap = texture;\r\n                material.opacityMapChannel = 'a';\r\n                if (diffuseTexture.hasOwnProperty('texCoord')) {\r\n                    material.diffuseMapUv = diffuseTexture.texCoord;\r\n                    material.opacityMapUv = diffuseTexture.texCoord;\r\n                }\r\n                if (diffuseTexture.hasOwnProperty('extensions') && diffuseTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                    var diffuseTransformData = diffuseTexture.extensions.KHR_texture_transform;\r\n                    if (diffuseTransformData.hasOwnProperty('scale')) {\r\n                        material.diffuseMapTiling = new pc.Vec2(diffuseTransformData.scale[0], diffuseTransformData.scale[1]);\r\n                        material.opacityMapTiling = new pc.Vec2(diffuseTransformData.scale[0], diffuseTransformData.scale[1]);\r\n                    }\r\n                    if (diffuseTransformData.hasOwnProperty('offset')) {\r\n                        material.diffuseMapOffset = new pc.Vec2(diffuseTransformData.offset[0], diffuseTransformData.offset[1]);\r\n                        material.opacityMapOffset = new pc.Vec2(diffuseTransformData.offset[0], diffuseTransformData.offset[1]);\r\n                    }\r\n                }\r\n            }\r\n            material.useMetalness = false;\r\n            if (specData.hasOwnProperty('specularFactor')) {\r\n                color = specData.specularFactor;\r\n                // Convert from linear space to sRGB space\r\n                material.specular.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\r\n            } else {\r\n                material.specular.set(1, 1, 1);\r\n            }\r\n            if (specData.hasOwnProperty('glossinessFactor')) {\r\n                material.shininess = 100 * specData.glossinessFactor;\r\n            } else {\r\n                material.shininess = 100;\r\n            }\r\n            if (specData.hasOwnProperty('specularGlossinessTexture')) {\r\n                var specularGlossinessTexture = specData.specularGlossinessTexture;\r\n                material.specularMap = resources.textures[specularGlossinessTexture.index];\r\n                material.specularMapChannel = 'rgb';\r\n                material.glossMap = resources.textures[specularGlossinessTexture.index];\r\n                material.glossMapChannel = 'a';\r\n                if (specularGlossinessTexture.hasOwnProperty('texCoord')) {\r\n                    material.glossMapUv = specularGlossinessTexture.texCoord;\r\n                    material.metalnessMapUv = specularGlossinessTexture.texCoord;\r\n                }\r\n                if (specularGlossinessTexture.hasOwnProperty('extensions') && specularGlossinessTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                    var specGlossTransformData = specularGlossinessTexture.extensions.KHR_texture_transform;\r\n                    if (specGlossTransformData.hasOwnProperty('scale')) {\r\n                        material.glossMapTiling = new pc.Vec2(specGlossTransformData.scale[0], specGlossTransformData.scale[1]);\r\n                        material.metalnessMapTiling = new pc.Vec2(specGlossTransformData.scale[0], specGlossTransformData.scale[1]);\r\n                    }\r\n                    if (specGlossTransformData.hasOwnProperty('offset')) {\r\n                        material.glossMapOffset = new pc.Vec2(specGlossTransformData.offset[0], specGlossTransformData.offset[1]);\r\n                        material.metalnessMapOffset = new pc.Vec2(specGlossTransformData.offset[0], specGlossTransformData.offset[1]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            material.chunks.specularPS = specularChunk;\r\n\r\n        } else if (data.hasOwnProperty('pbrMetallicRoughness')) {\r\n            var pbrData = data.pbrMetallicRoughness;\r\n\r\n            if (pbrData.hasOwnProperty('baseColorFactor')) {\r\n                color = pbrData.baseColorFactor;\r\n                // Convert from linear space to sRGB space\r\n                material.diffuse.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\r\n                material.opacity = color[3];\r\n            } else {\r\n                material.diffuse.set(1, 1, 1);\r\n                material.opacity = 1;\r\n            }\r\n            if (pbrData.hasOwnProperty('baseColorTexture')) {\r\n                var baseColorTexture = pbrData.baseColorTexture;\r\n                texture = resources.textures[baseColorTexture.index];\r\n\r\n                material.diffuseMap = texture;\r\n                material.diffuseMapChannel = 'rgb';\r\n                material.opacityMap = texture;\r\n                material.opacityMapChannel = 'a';\r\n                if (baseColorTexture.hasOwnProperty('texCoord')) {\r\n                    material.diffuseMapUv = baseColorTexture.texCoord;\r\n                    material.opacityMapUv = baseColorTexture.texCoord;\r\n                }\r\n                if (baseColorTexture.hasOwnProperty('extensions') && baseColorTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                    var baseColorTransformData = baseColorTexture.extensions.KHR_texture_transform;\r\n                    if (baseColorTransformData.hasOwnProperty('scale')) {\r\n                        material.diffuseMapTiling = new pc.Vec2(baseColorTransformData.scale[0], baseColorTransformData.scale[1]);\r\n                        material.opacityMapTiling = new pc.Vec2(baseColorTransformData.scale[0], baseColorTransformData.scale[1]);\r\n                    }\r\n                    if (baseColorTransformData.hasOwnProperty('offset')) {\r\n                        material.diffuseMapOffset = new pc.Vec2(baseColorTransformData.offset[0], baseColorTransformData.offset[1]);\r\n                        material.opacityMapOffset = new pc.Vec2(baseColorTransformData.offset[0], baseColorTransformData.offset[1]);\r\n                    }\r\n                }\r\n            }\r\n            material.useMetalness = true;\r\n            if (pbrData.hasOwnProperty('metallicFactor')) {\r\n                material.metalness = pbrData.metallicFactor;\r\n            } else {\r\n                material.metalness = 1;\r\n            }\r\n            if (pbrData.hasOwnProperty('roughnessFactor')) {\r\n                material.shininess = 100 * pbrData.roughnessFactor;\r\n            } else {\r\n                material.shininess = 100;\r\n            }\r\n            if (pbrData.hasOwnProperty('metallicRoughnessTexture')) {\r\n                var metallicRoughnessTexture = pbrData.metallicRoughnessTexture;\r\n                material.metalnessMap = resources.textures[metallicRoughnessTexture.index];\r\n                material.metalnessMapChannel = 'b';\r\n                material.glossMap = resources.textures[metallicRoughnessTexture.index];\r\n                material.glossMapChannel = 'g';\r\n                if (metallicRoughnessTexture.hasOwnProperty('texCoord')) {\r\n                    material.glossMapUv = metallicRoughnessTexture.texCoord;\r\n                    material.metalnessMapUv = metallicRoughnessTexture.texCoord;\r\n                }\r\n                if (metallicRoughnessTexture.hasOwnProperty('extensions') && metallicRoughnessTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                    var metallicTransformData = metallicRoughnessTexture.extensions.KHR_texture_transform;\r\n                    if (metallicTransformData.hasOwnProperty('scale')) {\r\n                        material.glossMapTiling = new pc.Vec2(metallicTransformData.scale[0], metallicTransformData.scale[1]);\r\n                        material.metalnessMapTiling = new pc.Vec2(metallicTransformData.scale[0], metallicTransformData.scale[1]);\r\n                    }\r\n                    if (metallicTransformData.hasOwnProperty('offset')) {\r\n                        material.glossMapOffset = new pc.Vec2(metallicTransformData.offset[0], metallicTransformData.offset[1]);\r\n                        material.metalnessMapOffset = new pc.Vec2(metallicTransformData.offset[0], metallicTransformData.offset[1]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            material.chunks.glossPS = glossChunk;\r\n        }\r\n\r\n        if (data.hasOwnProperty('normalTexture')) {\r\n            var normalTexture = data.normalTexture;\r\n            material.normalMap = resources.textures[normalTexture.index];\r\n            if (normalTexture.hasOwnProperty('texCoord')) {\r\n                material.normalMapUv = normalTexture.texCoord;\r\n            }\r\n            if (normalTexture.hasOwnProperty('extensions') && normalTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                var normalTransformData = normalTexture.extensions.KHR_texture_transform;\r\n                if (normalTransformData.hasOwnProperty('scale')) {\r\n                    material.normalMapTiling = new pc.Vec2(normalTransformData.scale[0], normalTransformData.scale[1]);\r\n                }\r\n                if (normalTransformData.hasOwnProperty('offset')) {\r\n                    material.normalMapOffset = new pc.Vec2(normalTransformData.offset[0], normalTransformData.offset[1]);\r\n                }\r\n            }\r\n            if (normalTexture.hasOwnProperty('scale')) {\r\n                material.bumpiness = normalTexture.scale;\r\n            }\r\n        }\r\n        if (data.hasOwnProperty('occlusionTexture')) {\r\n            var occlusionTexture = data.occlusionTexture;\r\n            material.aoMap = resources.textures[occlusionTexture.index];\r\n            material.aoMapChannel = 'r';\r\n            if (occlusionTexture.hasOwnProperty('texCoord')) {\r\n                material.aoMapUv = occlusionTexture.texCoord;\r\n            }\r\n            if (occlusionTexture.hasOwnProperty('extensions') && occlusionTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                var occlusionTransformData = occlusionTexture.extensions.KHR_texture_transform;\r\n                if (occlusionTransformData.hasOwnProperty('scale')) {\r\n                    material.aoMapTiling = new pc.Vec2(occlusionTransformData.scale[0], occlusionTransformData.scale[1]);\r\n                }\r\n                if (occlusionTransformData.hasOwnProperty('offset')) {\r\n                    material.aoMapOffset = new pc.Vec2(occlusionTransformData.offset[0], occlusionTransformData.offset[1]);\r\n                }\r\n            }\r\n            // TODO: support 'strength'\r\n        }\r\n        if (data.hasOwnProperty('emissiveFactor')) {\r\n            color = data.emissiveFactor;\r\n            // Convert from linear space to sRGB space\r\n            material.emissive.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\r\n            material.emissiveTint = true;\r\n        } else {\r\n            material.emissive.set(0, 0, 0);\r\n            material.emissiveTint = false;\r\n        }\r\n        if (data.hasOwnProperty('emissiveTexture')) {\r\n            var emissiveTexture = data.emissiveTexture;\r\n            material.emissiveMap = resources.textures[emissiveTexture.index];\r\n            if (emissiveTexture.hasOwnProperty('texCoord')) {\r\n                material.emissiveMapUv = emissiveTexture.texCoord;\r\n            }\r\n            if (emissiveTexture.hasOwnProperty('extensions') && emissiveTexture.extensions.hasOwnProperty('KHR_texture_transform')) {\r\n                var emissiveTransformData = emissiveTexture.extensions.KHR_texture_transform;\r\n                if (emissiveTransformData.hasOwnProperty('scale')) {\r\n                    material.emissiveMapTiling = new pc.Vec2(emissiveTransformData.scale[0], emissiveTransformData.scale[1]);\r\n                }\r\n                if (emissiveTransformData.hasOwnProperty('offset')) {\r\n                    material.emissiveMapOffset = new pc.Vec2(emissiveTransformData.offset[0], emissiveTransformData.offset[1]);\r\n                }\r\n            }\r\n        }\r\n        if (data.hasOwnProperty('alphaMode')) {\r\n            switch (data.alphaMode) {\r\n                case 'MASK':\r\n                    material.blendType = pc.BLEND_NONE;\r\n                    if (data.hasOwnProperty('alphaCutoff')) {\r\n                        material.alphaTest = data.alphaCutoff;\r\n                    } else {\r\n                        material.alphaTest = 0.5;\r\n                    }\r\n                    break;\r\n                case 'BLEND':\r\n                    material.blendType = pc.BLEND_NORMAL;\r\n                    break;\r\n                default:\r\n                case 'OPAQUE':\r\n                    material.blendType = pc.BLEND_NONE;\r\n                    break;\r\n            }\r\n        } else {\r\n            material.blendType = pc.BLEND_NONE;\r\n        }\r\n        if (data.hasOwnProperty('doubleSided')) {\r\n            material.twoSidedLighting = data.doubleSided;\r\n            material.cull = data.doubleSided ? pc.CULLFACE_NONE : pc.CULLFACE_BACK;\r\n        } else {\r\n            material.twoSidedLighting = false;\r\n            material.cull = pc.CULLFACE_BACK;\r\n        }\r\n\r\n        if (data.hasOwnProperty('extras') && resources.processMaterialExtras) {\r\n            resources.processMaterialExtras(material, data.extras);\r\n        }\r\n\r\n        material.update();\r\n\r\n        return material;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#mesh\r\n    function translateMesh(data, resources) {\r\n        var gltf = resources.gltf;\r\n        var meshes = [];\r\n\r\n        data.primitives.forEach(function (primitive) {\r\n            var attributes = primitive.attributes;\r\n\r\n            var positions = null;\r\n            var normals = null;\r\n            var tangents = null;\r\n            var texCoord0 = null;\r\n            var texCoord1 = null;\r\n            var colors = null;\r\n            var joints = null;\r\n            var weights = null;\r\n            var indices = null;\r\n\r\n            var i;\r\n\r\n            // Start by looking for compressed vertex data for this primitive\r\n            if (primitive.hasOwnProperty('extensions')) {\r\n                var extensions = primitive.extensions;\r\n                if (extensions.hasOwnProperty('KHR_draco_mesh_compression')) {\r\n                    var extDraco = extensions.KHR_draco_mesh_compression;\r\n\r\n                    var bufferView = gltf.bufferViews[extDraco.bufferView];\r\n                    var arrayBuffer = resources.buffers[bufferView.buffer];\r\n                    var byteOffset = bufferView.hasOwnProperty('byteOffset') ? bufferView.byteOffset : 0;\r\n                    var uint8Buffer = new Int8Array(arrayBuffer, byteOffset, bufferView.byteLength);\r\n\r\n                    var decoderModule = resources.decoderModule;\r\n                    var buffer = new decoderModule.DecoderBuffer();\r\n                    buffer.Init(uint8Buffer, uint8Buffer.length);\r\n\r\n                    var decoder = new decoderModule.Decoder();\r\n                    var geometryType = decoder.GetEncodedGeometryType(buffer);\r\n\r\n                    var outputGeometry, status;\r\n                    switch (geometryType) {\r\n                        case decoderModule.INVALID_GEOMETRY_TYPE:\r\n                            console.error('Invalid geometry type');\r\n                            break;\r\n                        case decoderModule.POINT_CLOUD:\r\n                            outputGeometry = new decoderModule.PointCloud();\r\n                            status = decoder.DecodeBufferToPointCloud(buffer, outputGeometry);\r\n                            break;\r\n                        case decoderModule.TRIANGULAR_MESH:\r\n                            outputGeometry = new decoderModule.Mesh();\r\n                            status = decoder.DecodeBufferToMesh(buffer, outputGeometry);\r\n                            break;\r\n                    }\r\n\r\n                    if (!status.ok() || outputGeometry.ptr == 0) {\r\n                        var errorMsg = status.error_msg();\r\n                        console.error(errorMsg);\r\n                    }\r\n\r\n                    var numPoints = outputGeometry.num_points();\r\n                    var numFaces = outputGeometry.num_faces();\r\n\r\n                    if (extDraco.hasOwnProperty('attributes')) {\r\n                        var extractAttribute = function (uniqueId) {\r\n                            var attribute = decoder.GetAttributeByUniqueId(outputGeometry, uniqueId);\r\n                            var attributeData = new decoderModule.DracoFloat32Array();\r\n                            decoder.GetAttributeFloatForAllPoints(outputGeometry, attribute, attributeData);\r\n                            var numValues = numPoints * attribute.num_components();\r\n                            var values = new Float32Array(numValues);\r\n\r\n                            for (i = 0; i < numValues; i++) {\r\n                                values[i] = attributeData.GetValue(i);\r\n                            }\r\n\r\n                            decoderModule.destroy(attributeData);\r\n                            return values;\r\n                        };\r\n\r\n                        var dracoAttribs = extDraco.attributes;\r\n                        if (dracoAttribs.hasOwnProperty('POSITION'))\r\n                            positions = extractAttribute(dracoAttribs.POSITION);\r\n                        if (dracoAttribs.hasOwnProperty('NORMAL'))\r\n                            normals   = extractAttribute(dracoAttribs.NORMAL);\r\n                        if (dracoAttribs.hasOwnProperty('TANGENT'))\r\n                            tangents  = extractAttribute(dracoAttribs.TANGENT);\r\n                        if (dracoAttribs.hasOwnProperty('TEXCOORD_0'))\r\n                            texCoord0 = extractAttribute(dracoAttribs.TEXCOORD_0);\r\n                        if (dracoAttribs.hasOwnProperty('TEXCOORD_1'))\r\n                            texCoord1 = extractAttribute(dracoAttribs.TEXCOORD_1);\r\n                        if (dracoAttribs.hasOwnProperty('COLOR_0'))\r\n                            colors    = extractAttribute(dracoAttribs.COLOR_0);\r\n                        if (dracoAttribs.hasOwnProperty('JOINTS_0'))\r\n                            joints    = extractAttribute(dracoAttribs.JOINTS_0);\r\n                        if (dracoAttribs.hasOwnProperty('WEIGHTS_0'))\r\n                            weights   = extractAttribute(dracoAttribs.WEIGHTS_0);\r\n                    }\r\n\r\n                    if (geometryType == decoderModule.TRIANGULAR_MESH) {\r\n                        var face = new decoderModule.DracoInt32Array();\r\n                        indices = (numPoints > 65535) ? new Uint32Array(numFaces * 3) : new Uint16Array(numFaces * 3);\r\n                        for (i = 0; i < numFaces; ++i) {\r\n                            decoder.GetFaceFromMesh(outputGeometry, i, face);\r\n                            indices[i * 3]     = face.GetValue(0);\r\n                            indices[i * 3 + 1] = face.GetValue(1);\r\n                            indices[i * 3 + 2] = face.GetValue(2);\r\n                        }\r\n                        decoderModule.destroy(face);\r\n                    }\r\n\r\n                    decoderModule.destroy(outputGeometry);\r\n                    decoderModule.destroy(decoder);\r\n                    decoderModule.destroy(buffer);\r\n                }\r\n            }\r\n\r\n            // Grab typed arrays for all vertex data\r\n            var accessor;\r\n\r\n            if (attributes.hasOwnProperty('POSITION') && positions === null) {\r\n                accessor = gltf.accessors[primitive.attributes.POSITION];\r\n                positions = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('NORMAL') && normals === null) {\r\n                accessor = gltf.accessors[primitive.attributes.NORMAL];\r\n                normals = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('TANGENT') && tangents === null) {\r\n                accessor = gltf.accessors[primitive.attributes.TANGENT];\r\n                tangents = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('TEXCOORD_0') && texCoord0 === null) {\r\n                accessor = gltf.accessors[primitive.attributes.TEXCOORD_0];\r\n                texCoord0 = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('TEXCOORD_1') && texCoord1 === null) {\r\n                accessor = gltf.accessors[primitive.attributes.TEXCOORD_1];\r\n                texCoord1 = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('COLOR_0') && colors === null) {\r\n                accessor = gltf.accessors[primitive.attributes.COLOR_0];\r\n                colors = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('JOINTS_0') && joints === null) {\r\n                accessor = gltf.accessors[primitive.attributes.JOINTS_0];\r\n                joints = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (attributes.hasOwnProperty('WEIGHTS_0') && weights === null) {\r\n                accessor = gltf.accessors[primitive.attributes.WEIGHTS_0];\r\n                weights = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n            if (primitive.hasOwnProperty('indices') && indices === null) {\r\n                accessor = gltf.accessors[primitive.indices];\r\n                indices = getAccessorData(gltf, accessor, resources.buffers);\r\n            }\r\n\r\n            var numVertices = positions.length / 3;\r\n\r\n            var calculateIndices = function () {\r\n                var dummyIndices = new Uint16Array(numVertices);\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dummyIndices[i] = i;\r\n                }\r\n                return dummyIndices;\r\n            };\r\n\r\n            if (positions !== null && normals === null) {\r\n                // pc.calculateNormals needs indices so generate some if none are present\r\n                normals = pc.calculateNormals(positions, (indices === null) ? calculateIndices() : indices);\r\n            }\r\n\r\n            var vertexDesc = [];\r\n            if (positions) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_POSITION, components: 3, type: pc.TYPE_FLOAT32 });\r\n            }\r\n            if (normals) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_NORMAL, components: 3, type: pc.TYPE_FLOAT32 });\r\n            }\r\n            if (tangents) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_TANGENT, components: 4, type: pc.TYPE_FLOAT32 });\r\n            }\r\n            if (texCoord0) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_TEXCOORD0, components: 2, type: pc.TYPE_FLOAT32 });\r\n            }\r\n            if (texCoord1) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_TEXCOORD1, components: 2, type: pc.TYPE_FLOAT32 });\r\n            }\r\n            if (colors) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_COLOR, components: 4, type: pc.TYPE_UINT8, normalize: true });\r\n            }\r\n            if (joints) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_BLENDINDICES, components: 4, type: pc.TYPE_UINT8 });\r\n            }\r\n            if (weights) {\r\n                vertexDesc.push({ semantic: pc.SEMANTIC_BLENDWEIGHT, components: 4, type: pc.TYPE_FLOAT32 });\r\n            }\r\n\r\n            var vertexFormat = new pc.VertexFormat(resources.device, vertexDesc);\r\n            var vertexBuffer = new pc.VertexBuffer(resources.device, vertexFormat, numVertices, pc.BUFFER_STATIC);\r\n            var vertexData = vertexBuffer.lock();\r\n\r\n            var vertexDataF32 = new Float32Array(vertexData);\r\n            var vertexDataU8  = new Uint8Array(vertexData);\r\n\r\n            var getAttribute = function (semantic) {\r\n                var elements = vertexFormat.elements;\r\n                for (i = 0; i < elements.length; i++) {\r\n                    if (elements[i].name === semantic) {\r\n                        return elements[i];\r\n                    }\r\n                }\r\n                return null;\r\n            };\r\n\r\n            var dstIndex, srcIndex;\r\n            var attr, dstOffset, dstStride;\r\n            if (positions !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_POSITION);\r\n                dstOffset = attr.offset / 4;\r\n                dstStride = attr.stride / 4;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 3;\r\n                    vertexDataF32[dstIndex]     = positions[srcIndex];\r\n                    vertexDataF32[dstIndex + 1] = positions[srcIndex + 1];\r\n                    vertexDataF32[dstIndex + 2] = positions[srcIndex + 2];\r\n                }\r\n            }\r\n\r\n            if (normals !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_NORMAL);\r\n                dstOffset = attr.offset / 4;\r\n                dstStride = attr.stride / 4;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 3;\r\n                    vertexDataF32[dstIndex]     = normals[srcIndex];\r\n                    vertexDataF32[dstIndex + 1] = normals[srcIndex + 1];\r\n                    vertexDataF32[dstIndex + 2] = normals[srcIndex + 2];\r\n                }\r\n            }\r\n\r\n            if (tangents !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_TANGENT);\r\n                dstOffset = attr.offset / 4;\r\n                dstStride = attr.stride / 4;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 4;\r\n                    vertexDataF32[dstIndex]     = tangents[srcIndex];\r\n                    vertexDataF32[dstIndex + 1] = tangents[srcIndex + 1];\r\n                    vertexDataF32[dstIndex + 2] = tangents[srcIndex + 2];\r\n                    vertexDataF32[dstIndex + 3] = tangents[srcIndex + 3];\r\n                }\r\n            }\r\n\r\n            if (texCoord0 !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_TEXCOORD0);\r\n                dstOffset = attr.offset / 4;\r\n                dstStride = attr.stride / 4;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 2;\r\n                    vertexDataF32[dstIndex]     = texCoord0[srcIndex];\r\n                    vertexDataF32[dstIndex + 1] = texCoord0[srcIndex + 1];\r\n                }\r\n            }\r\n\r\n            if (texCoord1 !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_TEXCOORD1);\r\n                dstOffset = attr.offset / 4;\r\n                dstStride = attr.stride / 4;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 2;\r\n                    vertexDataF32[dstIndex]     = texCoord1[srcIndex];\r\n                    vertexDataF32[dstIndex + 1] = texCoord1[srcIndex + 1];\r\n                }\r\n            }\r\n\r\n            if (colors !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_COLOR);\r\n                dstOffset = attr.offset;\r\n                dstStride = attr.stride;\r\n\r\n                accessor = gltf.accessors[primitive.attributes.COLOR_0];\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = accessor.type === 'VEC4' ? i * 4 : i * 3;\r\n                    var r = colors[srcIndex];\r\n                    var g = colors[srcIndex + 1];\r\n                    var b = colors[srcIndex + 2];\r\n                    var a = colors[srcIndex + 3];\r\n                    vertexDataU8[dstIndex]     = Math.round(pc.math.clamp(r, 0, 1) * 255);\r\n                    vertexDataU8[dstIndex + 1] = Math.round(pc.math.clamp(g, 0, 1) * 255);\r\n                    vertexDataU8[dstIndex + 2] = Math.round(pc.math.clamp(b, 0, 1) * 255);\r\n                    vertexDataU8[dstIndex + 3] = accessor.type === 'VEC4' ? Math.round(pc.math.clamp(a, 0, 1) * 255) : 255;\r\n                }\r\n            }\r\n\r\n            if (joints !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_BLENDINDICES);\r\n                dstOffset = attr.offset;\r\n                dstStride = attr.stride;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 4;\r\n                    vertexDataU8[dstIndex]     = joints[srcIndex];\r\n                    vertexDataU8[dstIndex + 1] = joints[srcIndex + 1];\r\n                    vertexDataU8[dstIndex + 2] = joints[srcIndex + 2];\r\n                    vertexDataU8[dstIndex + 3] = joints[srcIndex + 3];\r\n                }\r\n            }\r\n\r\n            if (weights !== null) {\r\n                attr = getAttribute(pc.SEMANTIC_BLENDWEIGHT);\r\n                dstOffset = attr.offset / 4;\r\n                dstStride = attr.stride / 4;\r\n\r\n                for (i = 0; i < numVertices; i++) {\r\n                    dstIndex = dstOffset + i * dstStride;\r\n                    srcIndex = i * 4;\r\n                    vertexDataF32[dstIndex]     = weights[srcIndex];\r\n                    vertexDataF32[dstIndex + 1] = weights[srcIndex + 1];\r\n                    vertexDataF32[dstIndex + 2] = weights[srcIndex + 2];\r\n                    vertexDataF32[dstIndex + 3] = weights[srcIndex + 3];\r\n                }\r\n            }\r\n\r\n            vertexBuffer.unlock();\r\n\r\n            var mesh = new pc.Mesh();\r\n            mesh.vertexBuffer = vertexBuffer;\r\n            mesh.primitive[0].type = getPrimitiveType(primitive);\r\n            mesh.primitive[0].base = 0;\r\n            mesh.primitive[0].indexed = (indices !== null);\r\n            if (indices !== null) {\r\n                var indexFormat;\r\n                if (indices instanceof Uint8Array) {\r\n                    indexFormat = pc.INDEXFORMAT_UINT8;\r\n                } else if (indices instanceof Uint16Array) {\r\n                    indexFormat = pc.INDEXFORMAT_UINT16;\r\n                } else {\r\n                    indexFormat = pc.INDEXFORMAT_UINT32;\r\n                }\r\n                var numIndices = indices.length;\r\n                var indexBuffer = new pc.IndexBuffer(resources.device, indexFormat, numIndices, pc.BUFFER_STATIC, indices);\r\n                mesh.indexBuffer[0] = indexBuffer;\r\n                mesh.primitive[0].count = indices.length;\r\n            } else {\r\n                mesh.primitive[0].count = numVertices;\r\n            }\r\n\r\n            mesh.materialIndex = primitive.material;\r\n\r\n            accessor = gltf.accessors[primitive.attributes.POSITION];\r\n            var min = accessor.min;\r\n            var max = accessor.max;\r\n            var aabb = new pc.BoundingBox(\r\n                new pc.Vec3((max[0] + min[0]) / 2, (max[1] + min[1]) / 2, (max[2] + min[2]) / 2),\r\n                new pc.Vec3((max[0] - min[0]) / 2, (max[1] - min[1]) / 2, (max[2] - min[2]) / 2)\r\n            );\r\n            mesh.aabb = aabb;\r\n\r\n            if (primitive.hasOwnProperty('targets')) {\r\n                var targets = [];\r\n\r\n                primitive.targets.forEach(function (target) {\r\n                    var options = {};\r\n                    if (target.hasOwnProperty('POSITION')) {\r\n                        accessor = gltf.accessors[target.POSITION];\r\n                        options.deltaPositions = getAccessorData(gltf, accessor, resources.buffers);\r\n                    }\r\n                    if (target.hasOwnProperty('NORMAL')) {\r\n                        accessor = gltf.accessors[target.NORMAL];\r\n                        options.deltaNormals = getAccessorData(gltf, accessor, resources.buffers);\r\n                    }\r\n                    if (target.hasOwnProperty('TANGENT')) {\r\n                        accessor = gltf.accessors[target.TANGENT];\r\n                        options.deltaTangents = getAccessorData(gltf, accessor, resources.buffers);\r\n                    }\r\n\r\n                    targets.push(new pc.MorphTarget(options));\r\n                });\r\n\r\n                mesh.morph = new pc.Morph(targets);\r\n            }\r\n\r\n            meshes.push(mesh);\r\n        });\r\n\r\n        return meshes;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#node\r\n    var tempMat = new pc.Mat4();\r\n    var tempVec = new pc.Vec3();\r\n\r\n    function translateNode(data, resources) {\r\n        var entity = new pc.GraphNode();\r\n\r\n        if (data.hasOwnProperty('name')) {\r\n            entity.name = data.name;\r\n        } else {\r\n            entity.name = \"Node \" + resources.nodeCounter;\r\n        }\r\n\r\n        // Parse transformation properties\r\n        if (data.hasOwnProperty('matrix')) {\r\n            tempMat.data.set(data.matrix);\r\n            tempMat.getTranslation(tempVec);\r\n            entity.setLocalPosition(tempVec);\r\n            tempMat.getEulerAngles(tempVec);\r\n            entity.setLocalEulerAngles(tempVec);\r\n            tempMat.getScale(tempVec);\r\n            entity.setLocalScale(tempVec);\r\n        }\r\n\r\n        if (data.hasOwnProperty('rotation')) {\r\n            var r = data.rotation;\r\n            entity.setLocalRotation(r[0], r[1], r[2], r[3]);\r\n        }\r\n\r\n        if (data.hasOwnProperty('translation')) {\r\n            var t = data.translation;\r\n            entity.setLocalPosition(t[0], t[1], t[2]);\r\n        }\r\n\r\n        if (data.hasOwnProperty('scale')) {\r\n            var s = data.scale;\r\n            entity.setLocalScale(s[0], s[1], s[2]);\r\n        }\r\n\r\n        // TODO: The loader has been temporarily switch from using Entities to GraphNodes\r\n        // in the hierarchy. Therefore, camera loading is disabled for now.\r\n        /*\r\n        if (data.hasOwnProperty('camera')) {\r\n            var gltf = resources.gltf;\r\n            var camera = gltf.cameras[data.camera];\r\n            var options = {};\r\n            if (camera.type === 'perspective') {\r\n                options.type = pc.PROJECTION_PERSPECTIVE;\r\n                if (camera.hasOwnProperty('perspective')) {\r\n                    var perspective = camera.perspective;\r\n                    if (perspective.hasOwnProperty('aspectRatio')) {\r\n                        options.aspectRatio = perspective.aspectRatio;\r\n                    }\r\n                    options.fov = perspective.yfov;\r\n                    if (perspective.hasOwnProperty('zfar')) {\r\n                        options.farClip = perspective.zfar;\r\n                    }\r\n                    options.nearClip = perspective.znear;\r\n                }\r\n            } else if (camera.type === 'orthographic') {\r\n                options.type = pc.PROJECTION_ORTHOGRAPHIC;\r\n                if (camera.hasOwnProperty('orthographic')) {\r\n                    var orthographic = camera.orthographic;\r\n                    options.aspectRatio = orthographic.xmag / orthographic.ymag;\r\n                    options.orthoHeight = orthographic.ymag * 0.5;\r\n                    options.farClip = orthographic.zfar;\r\n                    options.nearClip = orthographic.znear;\r\n                }\r\n            }\r\n            entity.addComponent('camera', options);\r\n            // Diable loaded cameras by default and leave it to the application to enable them\r\n            entity.camera.enabled = false;\r\n        }\r\n        */\r\n\r\n        resources.nodeCounter++;\r\n\r\n        return entity;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skin\r\n    function translateSkin(data, resources) {\r\n        var gltf = resources.gltf;\r\n\r\n        var i, j, bindMatrix;\r\n        var joints = data.joints;\r\n        var numJoints = joints.length;\r\n        var ibp = [];\r\n        if (data.hasOwnProperty('inverseBindMatrices')) {\r\n            var inverseBindMatrices = data.inverseBindMatrices;\r\n            var ibmData = getAccessorData(gltf, gltf.accessors[inverseBindMatrices], resources.buffers);\r\n            var ibmValues = [];\r\n\r\n            for (i = 0; i < numJoints; i++) {\r\n                for (j = 0; j < 16; j++) {\r\n                    ibmValues[j] = ibmData[i * 16 + j];\r\n                }\r\n                bindMatrix = new pc.Mat4();\r\n                bindMatrix.set(ibmValues);\r\n                ibp.push(bindMatrix);\r\n            }\r\n        } else {\r\n            for (i = 0; i < numJoints; i++) {\r\n                bindMatrix = new pc.Mat4();\r\n                ibp.push(bindMatrix);\r\n            }\r\n        }\r\n\r\n        var boneNames = [];\r\n        for (i = 0; i < numJoints; i++) {\r\n            boneNames[i] = resources.nodes[joints[i]].name;\r\n        }\r\n\r\n        var skeleton = data.skeleton;\r\n\r\n        var skin = new pc.Skin(resources.device, ibp, boneNames);\r\n        skin.skeleton = resources.nodes[skeleton];\r\n\r\n        skin.bones = [];\r\n        for (i = 0; i < joints.length; i++) {\r\n            skin.bones[i] = resources.nodes[joints[i]];\r\n        }\r\n\r\n        return skin;\r\n    }\r\n\r\n    // Specification:\r\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\r\n    function translateTexture(data, resources) {\r\n        var texture = new pc.Texture(resources.device, {\r\n            flipY: false\r\n        });\r\n\r\n        if (data.hasOwnProperty('name')) {\r\n            texture.name = data.name;\r\n        }\r\n\r\n        if (data.hasOwnProperty('sampler')) {\r\n            var gltf = resources.gltf;\r\n            var sampler = gltf.samplers[data.sampler];\r\n\r\n            if (sampler.hasOwnProperty('minFilter')) {\r\n                texture.minFilter = getFilter(sampler.minFilter);\r\n            }\r\n            if (sampler.hasOwnProperty('magFilter')) {\r\n                texture.magFilter = getFilter(sampler.magFilter);\r\n            }\r\n            if (sampler.hasOwnProperty('wrapS')) {\r\n                texture.addressU = getWrap(sampler.wrapS);\r\n            }\r\n            if (sampler.hasOwnProperty('wrapT')) {\r\n                texture.addressV = getWrap(sampler.wrapT);\r\n            }\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    function loadBuffers(resources, success) {\r\n        // buffers already loaded so early out\r\n        if (resources.buffers) {\r\n            success();\r\n            return;\r\n        }\r\n\r\n        var gltf = resources.gltf;\r\n        resources.buffers = [];\r\n\r\n        if (gltf.hasOwnProperty('buffers')) {\r\n            var numLoaded = 0;\r\n            gltf.buffers.forEach(function (buffer, idx) {\r\n                if (buffer.hasOwnProperty('uri')) {\r\n                    if (isDataURI(buffer.uri)) {\r\n                        // convert base64 to raw binary data held in a string\r\n                        // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n                        var byteString = atob(buffer.uri.split(',')[1]);\r\n\r\n                        // write the bytes of the string to an ArrayBuffer\r\n                        resources.buffers[idx] = new ArrayBuffer(byteString.length);\r\n\r\n                        // create a view into the buffer\r\n                        var uint8Array = new Uint8Array(resources.buffers[idx]);\r\n\r\n                        // set the bytes of the buffer to the correct values\r\n                        for (var i = 0; i < byteString.length; i++) {\r\n                            uint8Array[i] = byteString.charCodeAt(i);\r\n                        }\r\n\r\n                        if (gltf.buffers.length === ++numLoaded) {\r\n                            success();\r\n                        }\r\n                    } else if (resources.processUri) {\r\n                        resources.processUri(buffer.uri, function (result) {\r\n                            resources.buffers[idx] = result;\r\n                            if (gltf.buffers.length === ++numLoaded) {\r\n                                success();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        var xhr = new XMLHttpRequest();\r\n                        xhr.open('GET', resources.basePath + buffer.uri, true);\r\n                        xhr.responseType = 'arraybuffer';\r\n\r\n                        xhr.onload = function (e) {\r\n                            // response is unsigned 8 bit integer\r\n                            resources.buffers[idx] = this.response;\r\n\r\n                            if (gltf.buffers.length === ++numLoaded) {\r\n                                success();\r\n                            }\r\n                        };\r\n\r\n                        xhr.send();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function parse(property, translator, resources, success) {\r\n        if (success) {\r\n            if (!resources.gltf.hasOwnProperty(property)) {\r\n                success();\r\n                return;\r\n            }\r\n\r\n            if (resources.gltf[property].length === 0) {\r\n                success();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (resources.gltf.hasOwnProperty(property)) {\r\n            resources[property] = resources.gltf[property].map(function (item) {\r\n                return translator(item, resources, success);\r\n            });\r\n        }\r\n    }\r\n\r\n    function buildHierarchy(resources) {\r\n        var gltf = resources.gltf;\r\n        gltf.nodes.forEach(function (node, idx) {\r\n            if (node.hasOwnProperty('children')) {\r\n                node.children.forEach(function (childIdx) {\r\n                    var child = resources.nodes[childIdx];\r\n                    // If this triggers, a node in the glTF has more than one parent which is wrong\r\n                    if (child.parent) {\r\n                        child.parent.removeChild(child);\r\n                    }\r\n                    var parent = resources.nodes[idx];\r\n                    parent.addChild(child);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function getRoots(resources) {\r\n        var gltf = resources.gltf;\r\n        var rootNodes = [];\r\n        if (gltf.hasOwnProperty('scenes')) {\r\n            var sceneIndex = 0;\r\n            if (gltf.hasOwnProperty('scene')) {\r\n                sceneIndex = gltf.scene;\r\n            }\r\n            var nodes = gltf.scenes[sceneIndex].nodes;\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                rootNodes.push(resources.nodes[nodes[i]]);\r\n            }\r\n        } else {\r\n            rootNodes.push(resources.nodes[0]);\r\n        }\r\n\r\n        return rootNodes;\r\n    }\r\n\r\n    function createModel(resources) {\r\n        var gltf = resources.gltf;\r\n\r\n        var meshInstances = [];\r\n        var skinInstances = [];\r\n        var morphInstances = [];\r\n\r\n        gltf.nodes.forEach(function (node, nodeIndex) {\r\n            if (node.hasOwnProperty('mesh')) {\r\n                var meshGroup = resources.meshes[node.mesh];\r\n                meshGroup.forEach(function (mesh) {\r\n                    var material;\r\n                    if (mesh.materialIndex === undefined) {\r\n                        material = resources.defaultMaterial;\r\n                    } else {\r\n                        material = resources.materials[mesh.materialIndex];\r\n                    }\r\n\r\n                    var meshInstance = new pc.MeshInstance(resources.nodes[nodeIndex], mesh, material);\r\n                    meshInstances.push(meshInstance);\r\n\r\n                    if (mesh.morph) {\r\n                        var morphInstance = new pc.MorphInstance(mesh.morph);\r\n                        meshInstance.morphInstance = morphInstance;\r\n                        // HACK: need to force calculation of the morph's AABB due to a bug\r\n                        // in the engine. This is a private function and will be removed!\r\n                        morphInstance.updateBounds(meshInstance.mesh);\r\n                        if (mesh.weights) {\r\n                            mesh.weights.forEach(function (weight, weightIndex) {\r\n                                morphInstance.setWeight(weightIndex, weight);\r\n                            });\r\n                        }\r\n\r\n                        morphInstances.push(morphInstance);\r\n                    }\r\n\r\n                    if (node.hasOwnProperty('skin')) {\r\n                        var skin = resources.skins[node.skin];\r\n                        mesh.skin = skin;\r\n\r\n                        var skinInstance = new pc.SkinInstance(skin);\r\n                        skinInstance.bones = skin.bones;\r\n                        meshInstance.skinInstance = skinInstance;\r\n\r\n                        skinInstances.push(skinInstance);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        var model = new pc.Model();\r\n        var roots = getRoots(resources);\r\n        if (roots.length === 1) {\r\n            model.graph = roots[0];\r\n        } else {\r\n            model.graph = new pc.GraphNode();\r\n            roots.forEach(function (root) {\r\n                model.graph.addChild(root);\r\n            });\r\n        }\r\n        model.meshInstances = meshInstances;\r\n        model.morphInstances = morphInstances;\r\n        model.skinInstances = skinInstances;\r\n        return model;\r\n    }\r\n\r\n    function loadGltf(gltf, device, done, options) {\r\n        var buffers = (options && options.hasOwnProperty('buffers')) ? options.buffers : undefined;\r\n        var basePath = (options && options.hasOwnProperty('basePath')) ? options.basePath : undefined;\r\n        var processUri = (options && options.hasOwnProperty('processUri')) ? options.processUri : undefined;\r\n        var processAnimationExtras = (options && options.hasOwnProperty('processAnimationExtras')) ? options.processAnimationExtras : undefined;\r\n        var processMaterialExtras = (options && options.hasOwnProperty('processMaterialExtras')) ? options.processMaterialExtras : undefined;\r\n        var processGlobalExtras = (options && options.hasOwnProperty('processGlobalExtras')) ? options.processGlobalExtras : undefined;\r\n\r\n        var resources = {\r\n            basePath: basePath,\r\n            buffers: buffers,\r\n            device: device,\r\n            defaultMaterial: translateMaterial({}),\r\n            gltf: gltf,\r\n            imagesLoaded: 0,\r\n            nodeCounter: 0,\r\n            processUri: processUri,\r\n            processAnimationExtras: processAnimationExtras,\r\n            processMaterialExtras: processMaterialExtras\r\n        };\r\n\r\n        if (gltf.hasOwnProperty('extensionsUsed')) {\r\n            if (gltf.extensionsUsed.indexOf('KHR_draco_mesh_compression') !== -1) {\r\n                resources.decoderModule = options.decoderModule;\r\n            }\r\n        }\r\n\r\n        loadBuffers(resources, function () {\r\n            parse('textures', translateTexture, resources);\r\n            parse('images', translateImage, resources, function () {\r\n                parse('materials', translateMaterial, resources);\r\n                parse('meshes', translateMesh, resources);\r\n                parse('nodes', translateNode, resources);\r\n                parse('skins', translateSkin, resources);\r\n                parse('animations', translateAnimation, resources);\r\n\r\n                if (gltf.hasOwnProperty('extras') && processGlobalExtras) {\r\n                    processGlobalExtras(gltf.extras);\r\n                }\r\n\r\n                buildHierarchy(resources);\r\n                done(null, {\r\n                    model: createModel(resources),\r\n                    textures: resources.textures,\r\n                    animations: resources.animations\r\n                });\r\n\r\n                if (gltf.hasOwnProperty('extensionsUsed')) {\r\n                    if (gltf.extensionsUsed.indexOf('KHR_draco_mesh_compression') !== -1) {\r\n                        resources.decoderModule = null;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    function decodeBinaryUtf8(array) {\r\n        if (typeof TextDecoder !== 'undefined') {\r\n            return new TextDecoder().decode(array);\r\n        }\r\n\r\n        var str = \"\";\r\n        for (var i = 0, len = array.length; i < len; i++) {\r\n            str += String.fromCharCode(array[i]);\r\n        }\r\n\r\n        return decodeURIComponent(escape(str));\r\n    }\r\n\r\n    function loadGlb(glb, device, done, options) {\r\n        var dataView = new DataView(glb);\r\n\r\n        // Read header\r\n        var magic = dataView.getUint32(0, true);\r\n        if (magic !== 0x46546C67) {\r\n            done(\"Invalid magic number found in glb header. Expected 0x46546C67, found 0x\" + magic.toString(16));\r\n            return;\r\n        }\r\n        var version = dataView.getUint32(4, true);\r\n        if (version !== 2) {\r\n            done(\"Invalid version number found in glb header. Expected 2, found \" + version);\r\n            return;\r\n        }\r\n        var length = dataView.getUint32(8, true);\r\n\r\n        // Read JSON chunk\r\n        var chunkLength = dataView.getUint32(12, true);\r\n        var chunkType = dataView.getUint32(16, true);\r\n        if (chunkType !== 0x4E4F534A) {\r\n            done(\"Invalid chunk type found in glb file. Expected 0x4E4F534A, found 0x\" + chunkType.toString(16));\r\n            return;\r\n        }\r\n        var jsonData = new Uint8Array(glb, 20, chunkLength);\r\n        var gltf = JSON.parse(decodeBinaryUtf8(jsonData));\r\n\r\n        // Read the binary buffers\r\n        var buffers = [];\r\n        var byteOffset = 20 + chunkLength;\r\n        while (byteOffset < length) {\r\n            chunkLength = dataView.getUint32(byteOffset, true);\r\n            chunkType = dataView.getUint32(byteOffset + 4, true);\r\n            if (chunkType !== 0x004E4942) {\r\n                done(\"Invalid chunk type found in glb file. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\r\n                return;\r\n            }\r\n\r\n            var buffer = glb.slice(byteOffset + 8, byteOffset + 8 + chunkLength);\r\n            buffers.push(buffer);\r\n\r\n            byteOffset += chunkLength + 8;\r\n        }\r\n\r\n        options = options || {};\r\n        options.buffers = buffers;\r\n        loadGltf(gltf, device, done, options);\r\n    }\r\n\r\n    return {\r\n        loadGltf: loadGltf,\r\n        loadGlb: loadGlb,\r\n    };\r\n}());\r\n"]}